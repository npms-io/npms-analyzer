{
    // ------------------------------------------------------------------------------
    // Index settings
    // ------------------------------------------------------------------------------
    "settings" : {
        "number_of_shards" : 1,
        "number_of_replicas": 0,

        "analysis": {
            // Custom tokenizers
            "tokenizer": {
                // Exclusive tokenizer used for autocompletion highlight so that it correctly highlights partial words..
                // See: https://github.com/elastic/elasticsearch/issues/3137#issuecomment-22116469
                "autocomplete": {
                    "type": "edgeNGram",
                    "min_gram": "1",
                    "max_gram": "15",
                    "token_chars": ["letter", "digit"]
                }
            },

            // Custom filters
            "filter": {
                "non_alfanum_to_space": {
                    "type": "pattern_replace",
                    "pattern": "(?i)[^a-z0-9]+",
                    "replacement": " "
                },

                // Split word filter, which takes tokens, such as es6_promise or lodash.foreach, and splits them
                // into several other tokens
                "split_word": {
                    "type": "word_delimiter",
                    "generate_word_parts": true,
                    "generate_number_parts": true,
                    "catenate_words": false,
                    "catenate_numbers": false,
                    "catenate_all": false,
                    "split_on_case_change": true,
                    "preserve_original": true,
                    "split_on_numerics": true,
                    "stem_english_possessive": true
                },

                // Edge ngram to provide fallback to stemming
                "edge_ngram": {
                    "type": "edgeNGram",
                    "min_gram": "4",
                    "max_gram": "15"
                },

                // Dedicated filter for autocompletion
                "autocomplete": {
                    "type": "edgeNGram",
                    "min_gram": "1",
                    "max_gram": "15"
                },

                // Remove duplicate tokens
                "unique_on_same_position": {
                   "type": "unique",
                   "only_on_same_position": false
                }
            },

            // Custom analyzers
            "analyzer": {
                // The module_* series produces good results for the `name` and `keywords` fields
                "module": {
                    "tokenizer": "standard",
                    "filter": [
                        "asciifolding",
                        "split_word",
                        "lowercase",
                        "unique_on_same_position"
                    ],
                },

                "module_english": {
                    "tokenizer": "standard",
                    "filter": [
                        "asciifolding",
                        "split_word",
                        "lowercase",
                        "kstem",        // Non-aggressive english stemmer
                        "unique_on_same_position"
                    ]
                },

                "module_english_aggressive": {
                    "tokenizer": "standard",
                    "filter": [
                        "asciifolding",
                        "split_word",
                        "lowercase",
                        "porter_stem",  // Aggressive english stemmer
                        "unique_on_same_position"
                    ]
                },

                "module_edge_ngram": {
                    // This analyzer provides fallbacks in which the stemmer is not efficient, e.g.: searching for "glob" should match "globby"
                    "tokenizer": "standard",
                    "filter": [
                        "asciifolding",
                        "split_word",
                        "lowercase",
                        "edge_ngram",
                        "unique_on_same_position"
                    ]
                },

                // The module_autocomplete_* series produces good results for autocompletion
                "module_autocomplete": {
                    "tokenizer": "standard",
                    "filter": [
                        "asciifolding",
                        "split_word",
                        "lowercase",
                        "autocomplete",
                        "unique_on_same_position"
                    ]
                },

                "module_autocomplete_keyword": {
                    // This analyzer emits the whole string but replaces non-alfanum with spaces
                    // so that we can use it boost exact prefix matches higher
                    "tokenizer": "keyword",
                    "filter": [
                        "asciifolding",
                        "non_alfanum_to_space",
                        "lowercase",
                        "autocomplete",
                        "trim",
                        "unique_on_same_position"
                    ]
                },

                "module_autocomplete_keyword_search": {
                    // This analyzer is the "search_analyzer" for "module_autocomplete_keyword"
                    "tokenizer": "keyword",
                    "filter": [
                        "asciifolding",
                        "non_alfanum_to_space",
                        "lowercase",
                        "trim"
                    ]
                },

                "module_autocomplete_highlight": {
                    // This analyzer is necessary to perform proper highlighting
                    // See: https://github.com/elastic/elasticsearch/issues/3137#issuecomment-22116469
                    // Can't use split_word which may lead to "strange" highlighting in some edge cases :(
                    "tokenizer": "autocomplete",
                    "filter": [
                        "asciifolding",
                        "non_alfanum_to_space",
                        "lowercase",
                        "trim"
                    ]
                },

                // The raw analyzer simply does no transformation besides lowercasing
                "raw": {
                    "tokenizer": "keyword",
                    "filter": [
                        "lowercase"
                    ]
                }
            }
        }
    },

    // ------------------------------------------------------------------------------
    // Mappings
    // ------------------------------------------------------------------------------
    "mappings" : {
        "module" : {
            "dynamic": false,
            "_all": {
                "enabled": false
            },

            "properties" : {
                "module": {
                    "type": "object",
                    "properties": {
                        // The `name`, `description` and `keywords` fields all have `norms` disabled because we don't care about the fields length
                        // Also they have additional fields beyond the `standard` analyzer, such as `module_english`, `module_english_docs` etc
                        "name": {
                            "type": "string",
                            "fields": {
                                "english_docs": {
                                    "type": "string",
                                    "analyzer": "module_english",
                                    "index_options": "docs"
                                },
                                "english_aggressive_docs": {
                                    "type": "string",
                                    "analyzer": "module_english_aggressive",
                                    "index_options": "docs"
                                },
                                "edge_ngram": {
                                    "type": "string",
                                    "analyzer": "module_edge_ngram",
                                    "search_analyzer": "module"
                                },
                                "autocomplete": {
                                    "type": "string",
                                    "analyzer": "module_autocomplete",
                                    "search_analyzer": "module"
                                },
                                "autocomplete_highlight": {
                                    "type": "string",
                                    "analyzer": "module_autocomplete_highlight",
                                    "search_analyzer": "module",
                                    "index_options": "offsets"
                                },
                                "autocomplete_keyword": {
                                    "type": "string",
                                    "analyzer": "module_autocomplete_keyword",
                                    "search_analyzer": "module_autocomplete_keyword_search"
                                },
                                "raw": {
                                    "type": "string",
                                    "analyzer": "raw",
                                    "index_options": "docs"
                                }
                            }
                        },
                        "description": {
                            "type": "string",
                            "fields": {
                                "english_docs": {
                                    "type": "string",
                                    "analyzer": "module_english",
                                    "index_options": "docs"
                                },
                                "english_aggressive_docs": {
                                    "type": "string",
                                    "analyzer": "module_english_aggressive",
                                    "index_options": "docs"
                                },
                                "edge_ngram": {
                                    "type": "string",
                                    "analyzer": "module_edge_ngram",
                                    "search_analyzer": "module"
                                },
                            }
                        },
                        "keywords": {
                            "type": "string",
                            "fields": {
                                "english_docs": {
                                    "type": "string",
                                    "analyzer": "module_english",
                                    "index_options": "docs"
                                },
                                "english_aggressive_docs": {
                                    "type": "string",
                                    "analyzer": "module_english_aggressive",
                                    "index_options": "docs"
                                },
                                "edge_ngram": {
                                    "type": "string",
                                    "analyzer": "module_edge_ngram",
                                    "search_analyzer": "module"
                                },
                            }
                        },
                        "version": {
                            "type": "string",
                            "index": "no"
                        },
                        "date": {
                            "type": "date",
                            "index": "no"
                        },
                        "deprecated": {
                            "type": "string",
                            "index": "no"
                        },
                        "publisher": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "fields": {
                                        "raw": {
                                            "type": "string",
                                            "analyzer": "raw",
                                            "index_options": "docs"
                                        }
                                    }
                                },
                                "email": { "type": "string", "index": "no" }
                            }
                        },
                        "links": {
                            "type": "object",
                            "properties": {
                                "npm": { "type": "string", "index": "no" },
                                "homepage": { "type": "string", "index": "no" },
                                "repository": { "type": "string", "index": "no" },
                                "bugs": { "type": "string", "index": "no" }
                            }
                        },
                        "maintainers": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "fields": {
                                        "raw": {
                                            "type": "string",
                                            "analyzer": "raw",
                                            "index_options": "docs"
                                        }
                                    }
                                },
                                "email": { "type": "string", "index": "no" }
                            }
                        }
                    }
                },
                "evaluation": {
                    "type": "object",
                    "properties": {
                        "quality": {
                            "type": "object",
                            "properties": {
                                "carefulness": { "type": "double", "index": "no" },
                                "tests": { "type": "double", "index": "no" },
                                "dependenciesHealth": { "type": "double", "index": "no" },
                                "branding": { "type": "double", "index": "no" }
                            }
                        },
                        "popularity": {
                            "type": "object",
                            "properties": {
                                "communityInterest": { "type": "double", "index": "no" },
                                "downloadsCount": { "type": "double", "index": "no" },
                                "downloadsAcceleration": { "type": "double", "index": "no" },
                                "dependentsCount": { "type": "double", "index": "no" }
                            }
                        },
                        "maintenance": {
                            "type": "object",
                            "properties": {
                                "releasesFrequency": { "type": "double", "index": "no" },
                                "commitsFrequency": { "type": "double", "index": "no" },
                                "openIssues": { "type": "double", "index": "no" },
                                "issuesDistribution": { "type": "double", "index": "no" }
                            }
                        }
                    }
                },
                "score": {
                    "type": "object",
                    "properties": {
                        "final": { "type": "double" },
                        "detail": {
                            "type": "object",
                            "properties": {
                                "quality": { "type": "double" },
                                "popularity": { "type": "double" },
                                "maintenance": { "type": "double" }
                            }
                        }
                    }
                }
            }
        }
    }
}
