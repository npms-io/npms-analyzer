#!/usr/bin/env node

'use strict';

global.Promise = require('bluebird');

const path = require('path');
const yargs = require('yargs');
const loadJsonFile = require('load-json-file');
const david = Promise.promisifyAll(require('david'));

const argv = yargs
.usage('Usage: $0 --registry [registry-url]')
.wrap(Math.min(120, yargs.terminalWidth()))
.help('help').alias('help', 'h')
.option('registry', {
    type: 'string',
    alias: 'r',
    describe: 'The registry URL',
    default: 'https://registry.npmjs.org',
})
.argv;

const packageJsonPath = path.join(process.cwd(), 'package.json');

loadJsonFile(packageJsonPath)
.then((packageJson) => {
    return david.getUpdatedDependenciesAsync(packageJson, {
        npm: {
            'fetch-retries': 0,       // No need for retries, the registry is local
            registry: argv.registry,
        },
        loose: true, // Enable loose semver, there's some really strange versions that got into the registry somehow
    });
})
.then((deps) => {
    process.stdout.write(JSON.stringify(deps, null, 2));
    process.stdout.write('\n');
})
.done();
